
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/empty.yml"

- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_architecture }}.yml"
    - "../vars/empty.yml"

- name: Get Talos
  become: true
  get_url:
    url: "{{ item.url }}"
    dest: "/boot/{{ item.name }}"
    checksum: ""
  with_items:
    - { url: "{{ talos_kernel }}", checksum: "{{ talos_kernel_sha }}", name: talos-kernel     }
    - { url: "{{ talos_initrd }}", checksum: "{{ talos_initrd_sha }}", name: talos-initrd.xz  }

- name: Add grub menu (debian)
  become: true
  template:
    src: grub/debian.j2
    dest: /etc/grub.d/10_talos
    mode: 0755
  when: talos_grub and ansible_os_family == "Debian"
  notify: Update-grub

- name: Add grub menu (redhat)
  become: true
  template:
    src: grub/centos.j2
    dest: /etc/grub.d/10_talos
    mode: 0755
  when: talos_grub and ansible_os_family == "RedHat"
  notify: Update-grub

- name: talos network patch
  connection: local
  template:
    src: "talos.j2"
    dest: "{{ playbook_dir }}/../talos-patch.yaml"
  when: talos_machineconfig != ""

- meta: flush_handlers

- name: packages (debian)
  become: true
  apt:
    name: 'kexec-tools'
    update_cache: yes
    cache_valid_time: 3600
  when: talos_kexec and ansible_os_family == "Debian"

- name: Run Talos
  block:
    - name: Run kexec
      become: true
      command: "kexec {{ item }}"
      timeout: 30
      register: result
      failed_when: result.rc != 0
      with_items:
        - "-l /boot/talos-kernel --initrd=/boot/talos-initrd.xz --append=\"{{ talos_cmdline }} {{ talos_cmdline_net }} {{ talos_cmdline_addon }}\""
        - "-e"
      when: talos_kexec

  rescue:
    - name: check server
      connection: local
      command: "ping -c 15 {{ ansible_default_ipv4['address'] }}"
      when: talos_kexec

- name: Manual talos apply command
  ansible.builtin.debug:
    msg: talosctl apply-config --insecure --nodes {{ ansible_default_ipv4['address'] }} --config-patch @talos-patch.yaml --file {{ talos_machineconfig }}
  when: talos_machineconfig != "" and ansible_default_ipv4.gateway is defined

- name: Wait for manual interruption
  ansible.builtin.pause:
    minutes: '1'
  when: talos_kexec and talos_machineconfig != ""

- name: Apply talos machineconfig
  connection: local
  ansible.builtin.command:
    cmd: talosctl apply-config --insecure --nodes {{ ansible_default_ipv4['address'] }} --config-patch @talos-patch.yaml --file {{ talos_machineconfig }}
    chdir: "{{ playbook_dir }}/.."
  when: talos_kexec and talos_machineconfig != "" and ansible_default_ipv4.gateway is defined
